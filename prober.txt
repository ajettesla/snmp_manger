#!/usr/bin/env python3

import sys
import re
import time
import signal
from pysnmp.hlapi import *

global current_time

def signal_handler(sig, frame):
    print('Ctrl+C pressed. Exiting program.')
    sys.exit(0)

# Register the signal handler
signal.signal(signal.SIGINT, signal_handler)

def snmpget(ip, c, v, oid, port):
    errorIndication, errorStatus, errorIndex, varBinds = getCmd(SnmpEngine(),CommunityData(c, mpModel= v),UdpTransportTarget((ip, port)),ContextData(),ObjectType(ObjectIdentity(oid)))
    
    if errorIndication:
        print(errorIndication)
    elif not varBinds:
        print("No response received.")
    else:
        for oid, value in varBinds:
            print(f"{int(value)}", end= " | ")




def complete(ip, c, v, oid, port, t, r):
    if r==-1:
        while True:
            snmpget(ip, c, v, oid, port)
            time.sleep(1/t)
    else:
        print(f"{int(time.time())}", end=" | ")
        while r > 0:
            r = r - 1
            snmpget(ip, c, v, oid, port)
            time.sleep(1/t)

ip , port , c = sys.argv[1].split(":")

t = sys.argv[2]

r = sys.argv[3]

v = 1

r = int(r)

t = float(t)

if len(sys.argv) > 4 :
    for arg in sys.argv[4:]:
        current_time = time.time()
        complete(ip, c, v, arg, port, t, r)
        print("\n")
else:
    print("error please specify atleast on oid")
    sys.exit(0)

sys.exit(0) 





